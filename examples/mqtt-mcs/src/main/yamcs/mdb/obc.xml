<?xml version="1.0" encoding="UTF-8"?>
<SpaceSystem name="obc" xmlns="http://www.omg.org/spec/XTCE/20180204" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.omg.org/spec/XTCE/20180204 https://www.omg.org/spec/XTCE/20180204/SpaceSystem.xsd">
    <TelemetryMetaData>
        <!--OBC Telemetry-->
        <ParameterTypeSet>

            <AggregateParameterType name="CSP_Packet_ID_Type">
                <MemberList>
                    <Member name="Version" typeRef="CSP_Version_Type" />
                    <Member name="Type" typeRef="CSP_Type_Type" />
                    <Member name="SecHdrFlag" typeRef="CSP_Sec_Hdr_Flag_Type" />
                    <Member name="APID" typeRef="CSP_APID_Type" />
                </MemberList>
            </AggregateParameterType>
            <IntegerParameterType name="CSP_Version_Type" signed="false">
                <UnitSet />
                <IntegerDataEncoding sizeInBits="3" />
            </IntegerParameterType>
            <BooleanParameterType name="CSP_Type_Type" zeroStringValue="TM" oneStringValue="TC">
                <UnitSet />
                <IntegerDataEncoding sizeInBits="1" />
            </BooleanParameterType>
            <BooleanParameterType name="CSP_Sec_Hdr_Flag_Type" zeroStringValue="NotPresent" oneStringValue="Present">
                <UnitSet />
                <IntegerDataEncoding sizeInBits="1" />
            </BooleanParameterType>
            <IntegerParameterType name="CSP_APID_Type" signed="false">
                <UnitSet />
                <IntegerDataEncoding sizeInBits="11" />
            </IntegerParameterType>
            <AggregateParameterType name="CSP_Packet_Sequence_Type">
                <MemberList>
                    <Member name="GroupFlags" typeRef="CSP_Group_Flags_Type" />
                    <Member name="Count" typeRef="CSP_Source_Sequence_Count_Type" />
                </MemberList>
            </AggregateParameterType>
            <EnumeratedParameterType name="CSP_Group_Flags_Type">
                <UnitSet />
                <IntegerDataEncoding sizeInBits="2" />
                <EnumerationList>
                    <Enumeration value="0" label="Continuation" />
                    <Enumeration value="1" label="First" />
                    <Enumeration value="2" label="Last" />
                    <Enumeration value="3" label="Standalone" />
                </EnumerationList>
            </EnumeratedParameterType>
            <IntegerParameterType name="CSP_Source_Sequence_Count_Type" signed="false">
                <UnitSet />
                <IntegerDataEncoding sizeInBits="14" />
            </IntegerParameterType>
            <IntegerParameterType name="CSP_Packet_Length_Type" signed="false" initialValue="0">
                <UnitSet>
                    <Unit description="Size">Octets</Unit>
                </UnitSet>
                <IntegerDataEncoding sizeInBits="16" />
            </IntegerParameterType>

            <BooleanParameterType name="BL">
                <UnitSet />
                <IntegerDataEncoding sizeInBits="1" />
            </BooleanParameterType>
            <IntegerParameterType name="I16" signed="true">
                <UnitSet />
                <IntegerDataEncoding sizeInBits="16" />
            </IntegerParameterType>
            <IntegerParameterType name="U16" signed="false">
                <UnitSet />
                <IntegerDataEncoding sizeInBits="16" />
            </IntegerParameterType>
            <IntegerParameterType name="U32" signed="false">
                <UnitSet />
                <IntegerDataEncoding sizeInBits="32" />
            </IntegerParameterType>
            <!-- U8 Parameter Type -->
            <IntegerParameterType name="U8" signed="false">
                <UnitSet />
                <IntegerDataEncoding sizeInBits="8" />
            </IntegerParameterType>


        </ParameterTypeSet>

        <ParameterSet>
            <Parameter name="CSP_Packet_ID" parameterTypeRef="CSP_Packet_ID_Type" />
            <Parameter name="CSP_Packet_Sequence" parameterTypeRef="CSP_Packet_Sequence_Type" />
            <Parameter name="CSP_Packet_Length" parameterTypeRef="CSP_Packet_Length_Type" />


            <Parameter name="fs_mounted" parameterTypeRef="BL" initialValue="True" />
            <Parameter name="ram_image" parameterTypeRef="BL" initialValue="True"/>
            <Parameter name="temp_mcu" parameterTypeRef="I16" initialValue="313">
            </Parameter>
            <Parameter name="temp_ram" parameterTypeRef="I16" initialValue="315">
            </Parameter>
            <Parameter name="i_GSSB1" parameterTypeRef="U16" initialValue="0">
            </Parameter>
            <Parameter name="i_GSSB2" parameterTypeRef="U16" initialValue="0">
            </Parameter>
            <Parameter name="i_Flash" parameterTypeRef="U16" initialValue="0">
            </Parameter>
            <Parameter name="i_PWM" parameterTypeRef="U16" initialValue="0">
            </Parameter>
            <Parameter name="resetcause" parameterTypeRef="U32" initialValue="0">
            </Parameter>
            <Parameter name="bootcause" parameterTypeRef="U32" initialValue="4">
            </Parameter>
            <Parameter name="bootcount" parameterTypeRef="U16" initialValue="33"/>

            <Parameter name="clock" parameterTypeRef="U32" initialValue="199">
            </Parameter>
            <Parameter name="uptime" parameterTypeRef="U32" initialValue="1249">
            </Parameter>

<!--            EpsHK Parameter-->
            <Parameter name="vboost" parameterTypeRef="U16" initialValue="549" />
            <Parameter name="vbatt" parameterTypeRef="U16" initialValue="16590" />
            <Parameter name="curout" parameterTypeRef="U16" initialValue="2" />
            <Parameter name="curin" parameterTypeRef="U16" initialValue="92" />
            <Parameter name="cursun" parameterTypeRef="U16" initialValue="188" />
            <Parameter name="cursys" parameterTypeRef="U16" initialValue="178" />
            <Parameter name="temp" parameterTypeRef="I16" initialValue="30" />
            <Parameter name="out_val" parameterTypeRef="U8" initialValue="0" />
            <Parameter name="battmode" parameterTypeRef="U8" initialValue="4" />
            <Parameter name="pptmode" parameterTypeRef="U8" initialValue="2" />
            <Parameter name="wdtI2cS" parameterTypeRef="U32" initialValue="0" />
            <Parameter name="wdtGndS" parameterTypeRef="U32" initialValue="0" />
<!--            <Parameter name="bootcount" parameterTypeRef="U32" initialValue="168" />-->
            <Parameter name="cntWdtI2c" parameterTypeRef="U32" initialValue="0" />
            <Parameter name="cntWdtGnd" parameterTypeRef="U32" initialValue="0" />
            <Parameter name="cntWdtCsp" parameterTypeRef="U32" initialValue="0" />
            <Parameter name="wdtCspC" parameterTypeRef="U32" initialValue="0" />
            <Parameter name="latchups" parameterTypeRef="U16" initialValue="0" />
<!--            <Parameter name="bootcause" parameterTypeRef="U8" initialValue="7" />-->

<!--            Table -bpx_hk_1 Table bpx_hk_1 (91):-->
            <Parameter name="c_charge" parameterTypeRef="U16" initialValue="65535" />
            <Parameter name="c_dcharge" parameterTypeRef="U16" initialValue="65535" />
            <Parameter name="c_heater" parameterTypeRef="U16" initialValue="65535" />
<!--            <Parameter name="vbatt" parameterTypeRef="U16" initialValue="0" />-->
            <Parameter name="bat_temp1" parameterTypeRef="I16" initialValue="-32768" />
            <Parameter name="bat_temp2" parameterTypeRef="I16" initialValue="-32768" />
            <Parameter name="bat_temp3" parameterTypeRef="I16" initialValue="-32768" />
            <Parameter name="bat_temp4" parameterTypeRef="I16" initialValue="-32768" />
<!--            <Parameter name="bootcount" parameterTypeRef="U32" initialValue="4294967295" />-->
<!--            <Parameter name="bootcause" parameterTypeRef="U8" initialValue="255" />-->

<!--            Table: bpx_hk_2 Table bpx_hk_1 (93): same as 91-->



        </ParameterSet>

        <ContainerSet>
            <SequenceContainer abstract="true" name="CSPPacket">
                <EntryList>
                    <ParameterRefEntry parameterRef="CSP_Packet_ID" />
                    <ParameterRefEntry parameterRef="CSP_Packet_Sequence" />
                    <ParameterRefEntry parameterRef="CSP_Packet_Length" />
                </EntryList>
            </SequenceContainer>
            <SequenceContainer name="TelemetryPacket">
                <EntryList />
                <BaseContainer containerRef="CSPPacket">
                    <RestrictionCriteria>
                        <ComparisonList>
                            <Comparison value="0" parameterRef="CSP_Packet_ID/Version" />
                            <Comparison value="TM" parameterRef="CSP_Packet_ID/Type" />
                        </ComparisonList>
                    </RestrictionCriteria>
                </BaseContainer>
            </SequenceContainer>
            <SequenceContainer name="OBC_TELEMETRY">
                <EntryList>
                    <ParameterRefEntry parameterRef="fs_mounted" />
                    <ParameterRefEntry parameterRef="ram_image" />
                    <ParameterRefEntry parameterRef="temp_mcu" />
                    <ParameterRefEntry parameterRef="temp_ram" />
                    <ParameterRefEntry parameterRef="i_GSSB1" />
                    <ParameterRefEntry parameterRef="i_GSSB2" />
                    <ParameterRefEntry parameterRef="i_Flash" />
                    <ParameterRefEntry parameterRef="i_PWM" />
                    <ParameterRefEntry parameterRef="resetcause" />
                    <ParameterRefEntry parameterRef="bootcause" />
                    <ParameterRefEntry parameterRef="bootcount" />
                    <ParameterRefEntry parameterRef="clock" />
                    <ParameterRefEntry parameterRef="uptime" />
                </EntryList>
                <BaseContainer containerRef="TelemetryPacket">
                    <RestrictionCriteria>
                        <ComparisonList>
                            <Comparison value="NotPresent" parameterRef="CSP_Packet_ID/SecHdrFlag" />
                            <Comparison value="100" parameterRef="CSP_Packet_ID/APID" />
                        </ComparisonList>
                    </RestrictionCriteria>
                </BaseContainer>
            </SequenceContainer>
            <!-- EpsHkPacket SequenceContainer -->
            <SequenceContainer name="EpsHkPacket">
                <EntryList>
                    <ParameterRefEntry parameterRef="vboost" />
                    <ParameterRefEntry parameterRef="vbatt" />
                    <ParameterRefEntry parameterRef="curout" />
                    <ParameterRefEntry parameterRef="curin" />
                    <ParameterRefEntry parameterRef="cursun" />
                    <ParameterRefEntry parameterRef="cursys" />
                    <ParameterRefEntry parameterRef="temp" />
                    <ParameterRefEntry parameterRef="out_val" />
                    <ParameterRefEntry parameterRef="battmode" />
                    <ParameterRefEntry parameterRef="pptmode" />
                    <ParameterRefEntry parameterRef="wdtI2cS" />
                    <ParameterRefEntry parameterRef="wdtGndS" />
                    <ParameterRefEntry parameterRef="bootcount" />
                    <ParameterRefEntry parameterRef="cntWdtI2c" />
                    <ParameterRefEntry parameterRef="cntWdtGnd" />
                    <ParameterRefEntry parameterRef="cntWdtCsp" />
                    <ParameterRefEntry parameterRef="wdtCspC" />
                    <ParameterRefEntry parameterRef="latchups" />
                    <ParameterRefEntry parameterRef="bootcause" />
                </EntryList>
                <BaseContainer containerRef="TelemetryPacket">
                    <RestrictionCriteria>
                        <ComparisonList>
                            <Comparison value="NotPresent" parameterRef="CSP_Packet_ID/SecHdrFlag" />
                            <Comparison value="100" parameterRef="CSP_Packet_ID/APID" />
                        </ComparisonList>
                    </RestrictionCriteria>
                </BaseContainer>
            </SequenceContainer>
            <!-- BpxHk1Packet SequenceContainer -->
            <SequenceContainer name="BpxHk1Packet">
                <EntryList>
                    <ParameterRefEntry parameterRef="c_charge" />
                    <ParameterRefEntry parameterRef="c_dcharge" />
                    <ParameterRefEntry parameterRef="c_heater" />
                    <ParameterRefEntry parameterRef="vbatt" />
                    <ParameterRefEntry parameterRef="bat_temp1" />
                    <ParameterRefEntry parameterRef="bat_temp2" />
                    <ParameterRefEntry parameterRef="bat_temp3" />
                    <ParameterRefEntry parameterRef="bat_temp4" />
                    <ParameterRefEntry parameterRef="bootcount" />
                    <ParameterRefEntry parameterRef="bootcause" />
                </EntryList>
                <BaseContainer containerRef="TelemetryPacket">
                    <RestrictionCriteria>
                        <ComparisonList>
                            <Comparison value="NotPresent" parameterRef="CSP_Packet_ID/SecHdrFlag" />
                            <Comparison value="100" parameterRef="CSP_Packet_ID/APID" />
                        </ComparisonList>
                    </RestrictionCriteria>
                </BaseContainer>
            </SequenceContainer>


        </ContainerSet>

    </TelemetryMetaData>


    <CommandMetaData>
        <ArgumentTypeSet>
            <StringArgumentType name="String_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="200">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>00</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Ping1_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="32">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Ping2_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="32">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Ping3_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="32">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="UART_CHANNEL_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="200">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Module_ID_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="200">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Data_Length_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="200">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Command_Status_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="200">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Command_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="200">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Type_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="200">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Data_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="200">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Radio_File_Name_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="200">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="OBC_File_Name_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="400">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="PIN_CONFIGURATION_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="200">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Destination_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="200">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="I2C_Imager_Address_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="200">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Send_Bytes_Number_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="200">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Receive_Bytes_Number_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="200">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Send_Data_Hexadecimal_Format_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="400">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="I2C_BUS_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="800">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="I2C_ADDRESS_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="800">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="File_Number_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="800">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Digi_Image_Number_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="400">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="OBC_Filename_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="400">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Exposure_Type_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="400">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Manual_Exposure_Value_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="400">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Resolution_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="400">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Command_Typee">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="400">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="I2C_Channel_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="400">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Number_of_write_bytes_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="400">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Byte_Data_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="400">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Number_of_read_bytes_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="400">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="UART_Channel_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="400">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="I2C_Address_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="400">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="File_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="400">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Timer_Name_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="400">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Task_Or_Timer_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="400">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Time_To_Execute_Command_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="400">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="WriteCommand_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="400">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Command_Repeat_Number_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="400">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="State_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="400">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Stop_ON_Error_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="400">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="Frame_Number_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="400">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>
            <StringArgumentType name="ACS_Number_Type">
                <StringDataEncoding encoding="UTF-8">
                    <Variable maxSizeInBits="400">
                        <DynamicValue>
                            <ParameterInstanceRef parameterRef="_yamcs_ignore" />
                        </DynamicValue>
                        <TerminationChar>20</TerminationChar>
                    </Variable>
                </StringDataEncoding>
            </StringArgumentType>

        </ArgumentTypeSet>

        <MetaCommandSet>
<!--            xob commands-->
<!--            Learn the meaning of life-->
            <MetaCommand name="xob_gm">
                <CommandContainer name="xob_gm">
                    <EntryList>
                        <FixedValueEntry binaryValue="786f6220676d" sizeInBits="48"/>
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="xob_life">
                <CommandContainer name="xob_life">
                    <EntryList>
                        <FixedValueEntry binaryValue="786f62206c696665" sizeInBits="64"/>
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="xob_xobots">
                <CommandContainer name="xob_xobots">
                    <EntryList>
                        <FixedValueEntry binaryValue="786f6220786f626f7473" sizeInBits="80"/>
                    </EntryList>
                </CommandContainer>
            </MetaCommand>

            <!--            X-Radio-->
<!--            Most X-Band radio commands can be accessed using the xob xband txrx command-->
<!--            commanding the X-band radio from the ADCS-OBC. Write a hex string to the x-band radio then read a hex string-->
            <MetaCommand name="Write_Hex_String_To_X_Band_send_xob-xband-trrx" shortDescription="commanding the X-band radio from the ADCS-OBC. Write a hex string to the x-band radio then read a hex string">
                <ArgumentList>
                    <Argument argumentTypeRef="UART_CHANNEL_Type" name="UART_CHANNEL" shortDescription=""> </Argument>
                    <Argument argumentTypeRef="Module_ID_Type" name="Module_ID" shortDescription=""> </Argument>
                    <Argument argumentTypeRef="Data_Length_Type" name="Data_Length" shortDescription=""> </Argument>
                    <Argument argumentTypeRef="Command_Status_Type" name="Command_Status" shortDescription=""> </Argument>
                    <Argument argumentTypeRef="Command_Type" name="Command" shortDescription=""> </Argument>
                    <Argument argumentTypeRef="Type_Type" name="Type" shortDescription=""> </Argument>
                    <Argument argumentTypeRef="Data_Type" name="Data" shortDescription=""> </Argument>
                </ArgumentList>
                <CommandContainer name="Write_Hex_String_To_X_Band_send_xob-xband-trrx">
                    <EntryList>
                        <FixedValueEntry binaryValue="786f62207862616e642074787278" sizeInBits="112" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="UART_CHANNEL" />
                        <ArgumentRefEntry argumentRef="Module_ID" />
                        <ArgumentRefEntry argumentRef="Data_Length" />
                        <ArgumentRefEntry argumentRef="Command_Status" />
                        <ArgumentRefEntry argumentRef="Command" />
                        <ArgumentRefEntry argumentRef="Type" />
                        <ArgumentRefEntry argumentRef="Data" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Write_Hex_String_To_X_Band_With_VerboseOutput_send_xob-xband-vtrrx" shortDescription="Same as txrx but with verbose output">
                <ArgumentList>
                    <Argument argumentTypeRef="UART_CHANNEL_Type" name="UART_CHANNEL" shortDescription=""> </Argument>
                    <Argument argumentTypeRef="Module_ID_Type" name="Module_ID" shortDescription=""> </Argument>
                    <Argument argumentTypeRef="Data_Length_Type" name="Data_Length" shortDescription=""> </Argument>
                    <Argument argumentTypeRef="Command_Status_Type" name="Command_Status" shortDescription=""> </Argument>
                    <Argument argumentTypeRef="Command_Type" name="Command" shortDescription=""> </Argument>
                    <Argument argumentTypeRef="Type_Type" name="Type" shortDescription=""> </Argument>
                    <Argument argumentTypeRef="Data_Type" name="Data" shortDescription=""> </Argument>
                </ArgumentList>
                <CommandContainer name="Write_Hex_String_To_X_Band_With_VerboseOutput_send_xob-xband-vtrrx">
                    <EntryList>
                        <FixedValueEntry binaryValue="786f62207862616e64207674787278" sizeInBits="120" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="UART_CHANNEL" />
                        <ArgumentRefEntry argumentRef="Module_ID" />
                        <ArgumentRefEntry argumentRef="Data_Length" />
                        <ArgumentRefEntry argumentRef="Command_Status" />
                        <ArgumentRefEntry argumentRef="Command" />
                        <ArgumentRefEntry argumentRef="Type" />
                        <ArgumentRefEntry argumentRef="Data" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>

            <!--reading and writing files can be accessed by below command-->
            <MetaCommand name="Upload_Files_send_xob-xband-file-upload" shortDescription="upload files">
                <ArgumentList>
                    <Argument argumentTypeRef="UART_CHANNEL_Type" name="UART_CHANNEL" shortDescription=""> </Argument>
                    <Argument argumentTypeRef="Module_ID_Type" name="Module_ID" shortDescription=""> </Argument>
                    <Argument argumentTypeRef="Radio_File_Name_Type" name="Radio_File_Name" shortDescription="path length less than 30 characters"> </Argument>
                    <Argument argumentTypeRef="OBC_File_Name_Type" name="OBC_File_Name" shortDescription="path length less than 50 characters"> </Argument>
                </ArgumentList>
                <CommandContainer name="Upload_Files_send_xob-xband-file-upload">
                    <EntryList>
                        <FixedValueEntry binaryValue="786f62207862616e642075706c6f6164" sizeInBits="128" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="UART_CHANNEL" />
                        <ArgumentRefEntry argumentRef="Module_ID" />
                        <ArgumentRefEntry argumentRef="Radio_File_Name" />
                        <ArgumentRefEntry argumentRef="OBC_File_Name" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Download_Files_send_xob-xband-file-download" shortDescription="download files">
                <ArgumentList>
                    <Argument argumentTypeRef="UART_CHANNEL_Type" name="UART_CHANNEL" shortDescription=""> </Argument>
                    <Argument argumentTypeRef="Module_ID_Type" name="Module_ID" shortDescription=""> </Argument>
                    <Argument argumentTypeRef="Radio_File_Name_Type" name="Radio_File_Name" shortDescription="path length less than 30 characters"> </Argument>
                    <Argument argumentTypeRef="OBC_File_Name_Type" name="OBC_File_Name" shortDescription="path length less than 50 characters"> </Argument>
                </ArgumentList>
                <CommandContainer name="Download_Files_send_xob-xband-file-download">
                    <EntryList>
                        <FixedValueEntry binaryValue="786f62207862616e6420646f776e6c6f6164" sizeInBits="144" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="UART_CHANNEL" />
                        <ArgumentRefEntry argumentRef="Module_ID" />
                        <ArgumentRefEntry argumentRef="Radio_File_Name" />
                        <ArgumentRefEntry argumentRef="OBC_File_Name" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>

<!--            xob mux commands for multiplexer-->
            <MetaCommand name="Read_Current_Config_And_Current_Output_Pin_State_send_xob-mux-read_input_read_current_configuration" shortDescription="Read the current configuration and Read the current output pin state">
                <CommandContainer name="Read_Current_Config_And_Current_Output_Pin_State_send_xob-mux-read_input_read_current_configuration">
                    <EntryList>
                        <FixedValueEntry binaryValue="786f62206d7578" sizeInBits="56" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="726561645f696e707574" sizeInBits="80" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
<!--                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>-->
                        <FixedValueEntry binaryValue="32" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="313132" sizeInBits="24"/>
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Read_Incoming_logic_of_multiplexer_pins_send_xob-mux-read_input" shortDescription="Read the incoming logic level of multiplexer pins regardless of I/O configuration">
                <ArgumentList>
                    <Argument argumentTypeRef="PIN_CONFIGURATION_Type" name="PIN_CONFIGURATION" shortDescription="enter i2c bus value"> </Argument>
                </ArgumentList>
                <CommandContainer name="Read_incoming_logic_of_multiplexer_pins_send_xob-mux-read_input">
                    <EntryList>
                        <FixedValueEntry binaryValue="786f62206d7578" sizeInBits="56" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="726561645f696e707574" sizeInBits="80" />
<!--                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>-->
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="32" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="313132" sizeInBits="24"/>
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="PIN_CONFIGURATION" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Read_Outgoing_logic_of_multiplexer_pins_send_xob-mux-read_output" shortDescription="Read the outgoing logic level of multiplexer pins regardless of I/O configuration">
                <ArgumentList>
                    <Argument argumentTypeRef="PIN_CONFIGURATION_Type" name="PIN_CONFIGURATION" shortDescription="enter pin value according to operation"> </Argument>
                </ArgumentList>
                <CommandContainer name="Read_Outgoing_logic_of_multiplexer_pins_send_xob-mux-read_output">
                    <EntryList>
                        <FixedValueEntry binaryValue="786f62206d7578" sizeInBits="56" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="726561645f6f7574707574" sizeInBits="88" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="32" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="313132" sizeInBits="24"/>
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="PIN_CONFIGURATION" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Read_inversion_state_of_multiplexer_pins_send_xob-mux-read_invert" shortDescription="Read the inversion state of multiplexer pins regardless of I/O configuration">
                <ArgumentList>
                    <Argument argumentTypeRef="PIN_CONFIGURATION_Type" name="PIN_CONFIGURATION" shortDescription="enter pin value according to operation"> </Argument>
                </ArgumentList>
                <CommandContainer name="Read_inversion_state_of_multiplexer_pins_send_xob-mux-read_invert">
                    <EntryList>
                        <FixedValueEntry binaryValue="786f62206d7578" sizeInBits="56" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="726561645f696e76657274" sizeInBits="88" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
<!--                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>-->
                        <FixedValueEntry binaryValue="32" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="313132" sizeInBits="24"/>
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="PIN_CONFIGURATION" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Make_all_pins_act_as_input_pins_send_xob-mux-read_config" shortDescription="Make all pins act as input pins then enter pin config 255, Read the configuration of multiplexer pins for input (1) or output (0)">
                <ArgumentList>
                    <Argument argumentTypeRef="PIN_CONFIGURATION_Type" name="PIN_CONFIGURATION" shortDescription="enter pin value according to operation"> </Argument>
                </ArgumentList>
                <CommandContainer name="Make_all_pins_act_as_input_pins_send_xob-mux-read_config">
                    <EntryList>
                        <FixedValueEntry binaryValue="786f62206d7578" sizeInBits="56" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="726561645f636f6e666967" sizeInBits="88" />
<!--                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>-->
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="32" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="313132" sizeInBits="24"/>
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="PIN_CONFIGURATION" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Write_inversion_state_of_multiplexer_pins_send_xob-mux-write_invert" shortDescription="Write the inversion state of multiplexer pins regardless of I/O configuration">
                <ArgumentList>
                    <Argument argumentTypeRef="PIN_CONFIGURATION_Type" name="PIN_CONFIGURATION" shortDescription="enter pin value according to operation"> </Argument>
                </ArgumentList>
                <CommandContainer name="Write_inversion_state_of_multiplexer_pins_send_xob-mux-write_invert">
                    <EntryList>
                        <FixedValueEntry binaryValue="786f62206d7578" sizeInBits="56" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="77726974655f696e76657274" sizeInBits="96" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
<!--                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>-->
                        <FixedValueEntry binaryValue="32" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="313132" sizeInBits="24"/>
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="PIN_CONFIGURATION" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Enable_all_output_pins_send_xob-mux-write_output" shortDescription="Enable all output pins enter 255 in pin config and Enable a single output pin enter 1 and to Disable a single output pin enter 255">
                <ArgumentList>
                    <Argument argumentTypeRef="PIN_CONFIGURATION_Type" name="PIN_CONFIGURATION" shortDescription="Enable a single output pin enter 1 and to Disable a single output pin enter 255"> </Argument>
                </ArgumentList>
                <CommandContainer name="Enable_all_output_pins_send_xob-mux-write_output">
                    <EntryList>
                        <FixedValueEntry binaryValue="786f62206d7578" sizeInBits="56" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="77726974655f6f7574707574" sizeInBits="96" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
<!--                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>-->
                        <FixedValueEntry binaryValue="32" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="313132" sizeInBits="24"/>
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="PIN_CONFIGURATION" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Make_all_pins_act_as_output_pins_send_xob-mux-write_config" shortDescription="Make all pins act as output pins then enter pin config 0, Write the configuration of multiplexer pins for input (1) or output (0)">
                <ArgumentList>
                    <Argument argumentTypeRef="PIN_CONFIGURATION_Type" name="PIN_CONFIGURATION" shortDescription="enter pin value according to operation"> </Argument>
                </ArgumentList>
                <CommandContainer name="Make_all_pins_act_as_output_pins_send_xob-mux-write_config">
                    <EntryList>
                        <FixedValueEntry binaryValue="786f62206d7578" sizeInBits="56" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="77726974655f636f6e666967" sizeInBits="96" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
<!--                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>-->
                        <FixedValueEntry binaryValue="32" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="313132" sizeInBits="24"/>
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="PIN_CONFIGURATION" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Enable_a_single_output_pin_send_xob-mux-write_output" shortDescription="If pin 0 then pow(2,0) is formula">
                <ArgumentList>
                    <Argument argumentTypeRef="PIN_CONFIGURATION_Type" name="PIN_CONFIGURATION" shortDescription="enter pin value according to operation"> </Argument>
                </ArgumentList>
                <CommandContainer name="Enable_a_single_output_pin_send_xob-mux-write_output">
                    <EntryList>
                        <FixedValueEntry binaryValue="786f62206d7578" sizeInBits="56" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="77726974655f6f7574707574" sizeInBits="96" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="32" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="313132" sizeInBits="24"/>
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="PIN_CONFIGURATION" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Disable_a_single_output_pin_send_xob-mux-write_output" shortDescription="If pin 0 then 255 - pow(2,0) is formula">
                <ArgumentList>
                    <Argument argumentTypeRef="PIN_CONFIGURATION_Type" name="PIN_CONFIGURATION" shortDescription="enter pin value according to operation"> </Argument>
                </ArgumentList>
                <CommandContainer name="Disable_a_single_output_pin_send_xob-mux-write_output">
                    <EntryList>
                        <FixedValueEntry binaryValue="786f62206d7578" sizeInBits="56" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="77726974655f6f7574707574" sizeInBits="96" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="32" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="313132" sizeInBits="24"/>
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="PIN_CONFIGURATION" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>

            <!--HyperSpectral Imager-->
            <MetaCommand name="Get_Current_Imager_Time_send_xob-i2c-trtx-get-current-time" shortDescription="Get current imager time (Root I2C forwarding command)">
                <ArgumentList>
                    <Argument argumentTypeRef="Destination_Type" name="Destination" shortDescription="I2C lane commands are being sent on"> </Argument>
                    <Argument argumentTypeRef="I2C_Imager_Address_Type" name="I2C_Imager_Address" shortDescription="I2C address of the hyperspectral imager"> </Argument>
                    <Argument argumentTypeRef="Send_Bytes_Number_Type" name="Send_Bytes_Number" shortDescription="Number of send bytes in decimal format"> </Argument>
                    <Argument argumentTypeRef="Receive_Bytes_Number_Type" name="Receive_Bytes_Number" shortDescription="Number of recieve bytes in decimal format"> </Argument>
                    <Argument argumentTypeRef="Send_Data_Hexadecimal_Format_Type" name="Send_Data_Hexadecimal_Format" shortDescription="Data to send in hexadecimal format, This data corresponds to 88 - 1st byte sent - Command ID"> </Argument>
                </ArgumentList>
                <CommandContainer name="Get_Current_Imager_Time_send_xob-i2c-trtx-get-current-time">
                    <EntryList>
<!--                        Root I2C forwarding command-->
                        <FixedValueEntry binaryValue="786f6220693263" sizeInBits="56" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
<!--                        I2C command for sending and receiving-->
                        <FixedValueEntry binaryValue="74787278" sizeInBits="32" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="Destination" />
                        <ArgumentRefEntry argumentRef="I2C_Imager_Address" />
                        <ArgumentRefEntry argumentRef="Send_Bytes_Number" />
                        <ArgumentRefEntry argumentRef="Receive_Bytes_Number" />
                        <ArgumentRefEntry argumentRef="Send_Data_Hexadecimal_Format" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Get_Encoding_send_xob-i2c-tx-get-encoding" shortDescription="Get encoding (Root I2C forwarding command)">
                <ArgumentList>
                    <Argument argumentTypeRef="Destination_Type" name="Destination" shortDescription="I2C lane commands are being sent on"> </Argument>
                    <Argument argumentTypeRef="I2C_Imager_Address_Type" name="I2C_Imager_Address" shortDescription="I2C address of the hyperspectral imager"> </Argument>
                    <Argument argumentTypeRef="Send_Bytes_Number_Type" name="Send_Bytes_Number" shortDescription="Number of send bytes in decimal format"> </Argument>
                    <Argument argumentTypeRef="Send_Data_Hexadecimal_Format_Type" name="Send_Data_Hexadecimal_Format" shortDescription="2422 - Data to send in hexadecimal format2. This data corresponds to
24 - 1st byte sent - Command ID
22 - 2nd byte sent - Parameter ID"> </Argument>
                </ArgumentList>
                <CommandContainer name="Get_Encoding_send_xob-i2c-tx-get-encoding">
                    <EntryList>
                        <!--                        Root I2C forwarding command-->
                        <FixedValueEntry binaryValue="786f6220693263" sizeInBits="56" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <!--                        I2C command for sending-->
                        <FixedValueEntry binaryValue="7478" sizeInBits="16" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="Destination" />
                        <ArgumentRefEntry argumentRef="I2C_Imager_Address" />
                        <ArgumentRefEntry argumentRef="Send_Bytes_Number" />
                        <ArgumentRefEntry argumentRef="Send_Data_Hexadecimal_Format" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>

<!--            XO-CAM-->
            <MetaCommand name="Click_Image_And_Save_send_xob_xo_cam_capture_image" shortDescription="Captures and saves an image to the selected file number">
                <ArgumentList>
                    <Argument argumentTypeRef="I2C_BUS_Type" name="I2C_BUS" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="I2C_ADDRESS_Type" name="I2C_ADDRESS" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="File_Number_Type" name="File_Number" shortDescription="uint16"> </Argument>
                </ArgumentList>
                <CommandContainer name="Click_Image_And_Save_send_xob_xo_cam_capture_image">
                    <EntryList>
                        <!--Root I2C forwarding command-->
                        <FixedValueEntry binaryValue="786f6220786f2d63616d" sizeInBits="80" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <!--I2C command for sending-->
                        <FixedValueEntry binaryValue="636170747572655f696d616765" sizeInBits="104" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="I2C_BUS" />
                        <ArgumentRefEntry argumentRef="I2C_ADDRESS" />
                        <ArgumentRefEntry argumentRef="File_Number" />

                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Delete_Image_send_xob_xo_cam_delete" shortDescription="Delete payload image number">
                <ArgumentList>
                    <Argument argumentTypeRef="I2C_BUS_Type" name="I2C_BUS" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="I2C_ADDRESS_Type" name="I2C_ADDRESS" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="Digi_Image_Number_Type" name="Digi_Image_Number" shortDescription="uint16"> </Argument>
                </ArgumentList>
                <CommandContainer name="Delete_Image_send_xob_xo_cam_delete">
                    <EntryList>
                        <!--Root I2C forwarding command-->
                        <FixedValueEntry binaryValue="786f6220786f2d63616d" sizeInBits="80" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <!--I2C command for sending-->
                        <FixedValueEntry binaryValue="64656c657465" sizeInBits="48" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="I2C_BUS" />
                        <ArgumentRefEntry argumentRef="I2C_ADDRESS" />
                        <ArgumentRefEntry argumentRef="Digi_Image_Number" />

                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Download_Image_send_xob_xo_cam_download" shortDescription="Downloads payload image number to a named OBC file">
                <ArgumentList>
                    <Argument argumentTypeRef="I2C_BUS_Type" name="I2C_BUS" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="I2C_ADDRESS_Type" name="I2C_ADDRESS" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="Digi_Image_Number_Type" name="Digi_Image_Number" shortDescription="uint16"> </Argument>
                    <Argument argumentTypeRef="OBC_Filename_Type" name="OBC_Filename" shortDescription="String"> </Argument>
                </ArgumentList>
                <CommandContainer name="Download_Image_send_xob_xo_cam_download">
                    <EntryList>
                        <!--Root I2C forwarding command-->
                        <FixedValueEntry binaryValue="786f6220786f2d63616d" sizeInBits="80" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <!--I2C command for sending-->
                        <FixedValueEntry binaryValue="646f776e6c6f6164" sizeInBits="64" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="I2C_BUS" />
                        <ArgumentRefEntry argumentRef="I2C_ADDRESS" />
                        <ArgumentRefEntry argumentRef="Digi_Image_Number" />
                        <ArgumentRefEntry argumentRef="OBC_Filename" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Set_Camera_Exposure_send_xob_xo_cam_exposure" shortDescription="Sets manual exposure value (0-65535) and whether to use automatic (1) or manual (0) exposure">
                <ArgumentList>
                    <Argument argumentTypeRef="I2C_BUS_Type" name="I2C_BUS" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="I2C_ADDRESS_Type" name="I2C_ADDRESS" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="Exposure_Type_Type" name="Exposure_Type" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="Manual_Exposure_Value_Type" name="Manual_Exposure_Value" shortDescription="uint16"> </Argument>
                </ArgumentList>
                <CommandContainer name="Set_Camera_Exposure_send_xob_xo_cam_exposure">
                    <EntryList>
                        <!--Root I2C forwarding command-->
                        <FixedValueEntry binaryValue="786f6220786f2d63616d" sizeInBits="80" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <!--I2C command for sending-->
                        <FixedValueEntry binaryValue="6578706f73757265" sizeInBits="64" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="I2C_BUS" />
                        <ArgumentRefEntry argumentRef="I2C_ADDRESS" />
                        <ArgumentRefEntry argumentRef="Exposure_Type" />
                        <ArgumentRefEntry argumentRef="Manual_Exposure_Value" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="List_Payload_Images_send_xob_xo_ls" shortDescription="List payload images">
                <ArgumentList>
                    <Argument argumentTypeRef="I2C_BUS_Type" name="I2C_BUS" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="I2C_ADDRESS_Type" name="I2C_ADDRESS" shortDescription="uint8"> </Argument>
                </ArgumentList>
                <CommandContainer name="List_Payload_Images_send_xob_xo_ls">
                    <EntryList>
                        <!--Root I2C forwarding command-->
                        <FixedValueEntry binaryValue="786f6220786f2d63616d" sizeInBits="80" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <!--I2C command for sending-->
                        <FixedValueEntry binaryValue="6c73" sizeInBits="16" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="I2C_BUS" />
                        <ArgumentRefEntry argumentRef="I2C_ADDRESS" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Select_Resolution_send_xob_xo_cam_resolution" shortDescription="Select preconfigured resolution [0-8]">
                <ArgumentList>
                    <Argument argumentTypeRef="I2C_BUS_Type" name="I2C_BUS" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="I2C_ADDRESS_Type" name="I2C_ADDRESS" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="Resolution_Type" name="Resolution" shortDescription="uint8"> </Argument>
                </ArgumentList>
                <CommandContainer name="Select_Resolution_send_xob_xo_cam_resolution">
                    <EntryList>
                        <!--Root I2C forwarding command-->
                        <FixedValueEntry binaryValue="786f6220786f2d63616d" sizeInBits="80" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <!--I2C command for sending-->
                        <FixedValueEntry binaryValue="7265736f6c7574696f6e" sizeInBits="80" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="I2C_BUS" />
                        <ArgumentRefEntry argumentRef="I2C_ADDRESS" />
                        <ArgumentRefEntry argumentRef="Resolution" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Upload_To_Payload_Image_Number_send_xob_xo_cam_upload" shortDescription="Uploads named OBC file to payload image number">
                <ArgumentList>
                    <Argument argumentTypeRef="I2C_BUS_Type" name="I2C_BUS" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="I2C_ADDRESS_Type" name="I2C_ADDRESS" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="Digi_Image_Number_Type" name="Digi_Image_Number" shortDescription="uint16"> </Argument>
                    <Argument argumentTypeRef="OBC_Filename_Type" name="OBC_Filename" shortDescription="String"> </Argument>
                </ArgumentList>
                <CommandContainer name="Upload_To_Payload_Image_Number_send_xob_xo_cam_upload">
                    <EntryList>
                        <!--Root I2C forwarding command-->
                        <FixedValueEntry binaryValue="786f6220786f2d63616d" sizeInBits="80" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <!--I2C command for sending-->
                        <FixedValueEntry binaryValue="75706c6f6164" sizeInBits="48" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="I2C_BUS" />
                        <ArgumentRefEntry argumentRef="I2C_ADDRESS" />
                        <ArgumentRefEntry argumentRef="Digi_Image_Number" />
                        <ArgumentRefEntry argumentRef="OBC_Filename" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Executes_Yocto_send_xob_xo_exce" shortDescription="Executes a custom Yocto Linux command (Exobotics only!)">
                <ArgumentList>
                    <Argument argumentTypeRef="I2C_BUS_Type" name="I2C_BUS" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="I2C_ADDRESS_Type" name="I2C_ADDRESS" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="Command_Typee" name="Command" shortDescription="string"> </Argument>
                </ArgumentList>
                <CommandContainer name="Executes_Yocto_send_xob_xo_exce">
                    <EntryList>
                        <!--Root I2C forwarding command-->
                        <FixedValueEntry binaryValue="786f6220786f2d63616d" sizeInBits="80" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <!--I2C command for sending-->
                        <FixedValueEntry binaryValue="65786563" sizeInBits="32" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="I2C_BUS" />
                        <ArgumentRefEntry argumentRef="I2C_ADDRESS" />
                        <ArgumentRefEntry argumentRef="Command" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>

<!--            XO-Track Ask -->


<!--            Generic I2C Commands-->
<!--            Both OBCs expose an xob i2c command with the following sub commands:-->
            <MetaCommand name="Write_bytes_to_given_I2C_channel_and_address_send_xob_i2c_tx" shortDescription="Write the specified number of bytes to the given I2C channel and address">
                <ArgumentList>
                    <Argument argumentTypeRef="I2C_Channel_Type" name="I2C_Channel" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="I2C_ADDRESS_Type" name="I2C_ADDRESS" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="Number_of_write_bytes_Type" name="Number_of_write_bytes" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="Byte_Data_Type" name="Byte_Data" shortDescription="string"> </Argument>
                </ArgumentList>
                <CommandContainer name="Write_bytes_to_given_I2C_channel_and_address_send_xob_i2c_tx">
                    <EntryList>
                        <FixedValueEntry binaryValue="786f6220693263" sizeInBits="56" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="7478" sizeInBits="16" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="I2C_Channel" />
                        <ArgumentRefEntry argumentRef="I2C_ADDRESS" />
                        <ArgumentRefEntry argumentRef="Number_of_write_bytes" />
                        <ArgumentRefEntry argumentRef="Byte_Data" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Write_bytes_to_given_I2C_channel_and_address_And_Read_also_send_xob_i2c_txrx" shortDescription="Write the specified number of bytes to the given I2C channel and address and then read the specified number of bytes from the same channel and address">
                <ArgumentList>
                    <Argument argumentTypeRef="I2C_Channel_Type" name="I2C_Channel" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="I2C_ADDRESS_Type" name="I2C_ADDRESS" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="Number_of_write_bytes_Type" name="Number_of_write_bytes" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="Number_of_read_bytes_Type" name="Number_of_read_bytes" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="Byte_Data_Type" name="Byte_Data" shortDescription="string"> </Argument>
                </ArgumentList>
                <CommandContainer name="Write_bytes_to_given_I2C_channel_and_address_And_Read_also_send_xob_i2c_txrx">
                    <EntryList>
                        <FixedValueEntry binaryValue="786f6220693263" sizeInBits="56" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="74787278" sizeInBits="32" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="I2C_Channel" />
                        <ArgumentRefEntry argumentRef="I2C_ADDRESS" />
                        <ArgumentRefEntry argumentRef="Number_of_write_bytes" />
                        <ArgumentRefEntry argumentRef="Number_of_read_bytes" />
                        <ArgumentRefEntry argumentRef="Byte_Data" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Read_bytes_to_given_I2C_channel_and_address_send_xob_i2c_rx" shortDescription="Read the specified number of bytes from the same channel from the given I2C channel and address">
                <ArgumentList>
                    <Argument argumentTypeRef="I2C_Channel_Type" name="I2C_Channel" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="I2C_ADDRESS_Type" name="I2C_ADDRESS" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="Number_of_read_bytes_Type" name="Number_of_read_bytes" shortDescription="uint8"> </Argument>
                </ArgumentList>
                <CommandContainer name="Read_bytes_to_given_I2C_channel_and_address_send_xob_i2c_rx">
                    <EntryList>
                        <FixedValueEntry binaryValue="786f6220693263" sizeInBits="56" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="7278" sizeInBits="16" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="I2C_Channel" />
                        <ArgumentRefEntry argumentRef="I2C_ADDRESS" />
                        <ArgumentRefEntry argumentRef="Number_of_read_bytes" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>

<!--            Generic UART Commands  -->
<!--            This allows for a lower level access to UART communications.  -->
            <MetaCommand name="Write_Byte_To_Given_UART_channel_send-xob-uart-tx" shortDescription="Write the specified number of bytes to the given UART channel">
                <ArgumentList>
                    <Argument argumentTypeRef="UART_Channel_Type" name="UART_Channel" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="Number_of_write_bytes_Type" name="Number_of_write_bytes" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="Byte_Data_Type" name="Byte_Data" shortDescription="string"> </Argument>
                </ArgumentList>
                <CommandContainer name="Write_Byte_To_Given_UART_channel_send-xob-uart-tx">
                    <EntryList>
                        <FixedValueEntry binaryValue="786f622075617274" sizeInBits="64" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="7478" sizeInBits="16" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="UART_Channel" />
                        <ArgumentRefEntry argumentRef="Number_of_write_bytes" />
                        <ArgumentRefEntry argumentRef="Byte_Data" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Write_Byte_To_Given_UART_channel_and_Read_Also_Byte_send-xob-uart-txrx" shortDescription="Write the specified number of bytes to the given UART channel and then read the specified number of bytes from the same channel">
                <ArgumentList>
                    <Argument argumentTypeRef="UART_Channel_Type" name="UART_Channel" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="Number_of_write_bytes_Type" name="Number_of_write_bytes" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="Number_of_read_bytes_Type" name="Number_of_read_bytes" shortDescription="uint8"> </Argument>
                    <Argument argumentTypeRef="Byte_Data_Type" name="Byte_Data" shortDescription="string"> </Argument>
                </ArgumentList>
                <CommandContainer name="Write_Byte_To_Given_UART_channel_and_Read_Also_Byte_send-xob-uart-txrx">
                    <EntryList>
                        <FixedValueEntry binaryValue="786f622075617274" sizeInBits="64" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <FixedValueEntry binaryValue="74787278" sizeInBits="32" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="UART_Channel" />
                        <ArgumentRefEntry argumentRef="Number_of_write_bytes" />
                        <ArgumentRefEntry argumentRef="Number_of_read_bytes" />
                        <ArgumentRefEntry argumentRef="Byte_Data" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>



            <!--You can see which version is loaded by running the cmp ident command on the OBC.-->
            <!--The internal/external image will return -->
            <MetaCommand name="nanomind#cmpident" shortDescription="internal/external image will return for version check!'">
                <CommandContainer name="nanomind#cmpident">
                    <EntryList>

                    </EntryList>
                </CommandContainer>
           </MetaCommand>

            <!--How To Part -->
            <!--FTP Commands-->
            <MetaCommand name="See_All_FTP_Commands_send_ftp" shortDescription="See all available ftp commands">
                <CommandContainer name="See_All_FTP_Commands_send_ftp">
                    <EntryList>
                        <FixedValueEntry binaryValue="667470" sizeInBits="24" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="List_files_FTP_Commands_send_ftp_ls" shortDescription="See all available list files">
                <CommandContainer name="List_files_FTP_Commands_send_ftp_ls">
                    <EntryList>
                        <FixedValueEntry binaryValue="667470206c73" sizeInBits="48" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Set_FTP_server_FTP_Commands_send_ftp_server" shortDescription="Set the I2C address of the target node">
                <ArgumentList>
                    <Argument argumentTypeRef="I2C_Address_Type" name="I2C_Address"/>
                </ArgumentList>
                <CommandContainer name="Set_FTP_server_FTP_Commands_send_ftp_server">
                    <EntryList>
                        <FixedValueEntry binaryValue="66747020736572766572" sizeInBits="80" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8" />
                        <ArgumentRefEntry argumentRef="I2C_Address"/>
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Upload_URL_FTP_Commands_send_ftp_upload" shortDescription="Upload URL">
                <ArgumentList>
                    <Argument argumentTypeRef="File_Type" name="File1"/>
                    <Argument argumentTypeRef="File_Type" name="File2"/>
                </ArgumentList>
                <CommandContainer name="Upload_URL_FTP_Commands_send_ftp_upload">
                    <EntryList>
                        <FixedValueEntry binaryValue="6674702075706c6f6164" sizeInBits="80" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8" />
                        <ArgumentRefEntry argumentRef="File1"/>
                        <ArgumentRefEntry argumentRef="File2"/>
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Download_URL_FTP_Commands_send_ftp_download" shortDescription=" Download URL">
                <ArgumentList>
                    <Argument argumentTypeRef="File_Type" name="File"/>
                </ArgumentList>
                <CommandContainer name="Download_URL_FTP_Commands_send_ftp_download">
                    <EntryList>
                        <FixedValueEntry binaryValue="66747020646f776e6c6f6164" sizeInBits="96" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8" />
                        <ArgumentRefEntry argumentRef="File"/>
                    </EntryList>
                </CommandContainer>
            </MetaCommand>

            <!--fp(Flight Planner) commands-->
            <MetaCommand name="Flight_Planner_All_Commands_send_fp" shortDescription="See available flight planner commands">
                <CommandContainer name="Flight_Planner_All_Commands_send_fp">
                    <EntryList>
                        <FixedValueEntry binaryValue="6670" sizeInBits="16" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Set_FP_server_FP_Commands_send_fp_server" shortDescription="Set flight planner server">
                <ArgumentList>
                    <Argument argumentTypeRef="I2C_Address_Type" name="I2C_Address"/>
                </ArgumentList>
                <CommandContainer name="Set_FP_server_FP_Commands_send_fp_server">
                    <EntryList>
                        <FixedValueEntry binaryValue="667020736572766572" sizeInBits="72" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8" />
                        <ArgumentRefEntry argumentRef="I2C_Address"/>
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Scheduled_Tasks_Commands_send_fp_list" shortDescription="Check existing scheduled tasks">
                <CommandContainer name="Scheduled_Tasks_Commands_send_fp_list">
                    <EntryList>
                        <FixedValueEntry binaryValue="6670206c697374" sizeInBits="56" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Create_New_Task_or_Timer_send_fp_create" shortDescription="Schedule ping test or Create new Timer">
                <ArgumentList>
                    <Argument argumentTypeRef="Task_Or_Timer_Type" name="Task_Or_Timer"/>
                    <Argument argumentTypeRef="Time_To_Execute_Command_Type" name="Time_To_Execute_Command"/>
                    <Argument argumentTypeRef="WriteCommand_Type" name="WriteCommand"/>
                    <Argument argumentTypeRef="Command_Repeat_Number_Type" name="Command_Repeat_Number"/>
                    <Argument argumentTypeRef="State_Type" name="State"/>
                    <Argument argumentTypeRef="Stop_ON_Error_Type" name="Stop_ON_Error"/>
                </ArgumentList>
                <CommandContainer name="Create_New_Task_or_Timer_send_fp_create">
                    <EntryList>
                        <FixedValueEntry binaryValue="667020637265617465" sizeInBits="72" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8" />
                        <ArgumentRefEntry argumentRef="Task_Or_Timer"/>
                        <ArgumentRefEntry argumentRef="Time_To_Execute_Command"/>
                        <ArgumentRefEntry argumentRef="WriteCommand"/>
                        <ArgumentRefEntry argumentRef="Command_Repeat_Number"/>
                        <ArgumentRefEntry argumentRef="State"/>
                        <ArgumentRefEntry argumentRef="Stop_ON_Error"/>
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Delete_completed_Task_Commands_send_fp_delete" shortDescription="Delete completed task">
                <ArgumentList>
                    <Argument argumentTypeRef="Timer_Name_Type" name="Timer_Name"/>
                </ArgumentList>
                <CommandContainer name="Delete_completed_Task_Commands_send_fp_delete">
                    <EntryList>
                        <FixedValueEntry binaryValue="66702064656c657465" sizeInBits="72" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8" />
                        <ArgumentRefEntry argumentRef="Timer_Name"/>
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Flush_Current_Flight_Planner_send_fp_flush" shortDescription="Flush current flight planner">
                <CommandContainer name="Flush_Current_Flight_Planner_send_fp_flush">
                    <EntryList>
                        <FixedValueEntry binaryValue="667020666c757368" sizeInBits="64" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Load_FP_from_file_send_fp_load" shortDescription="Load FP from file - Will Flush current FP">
                <CommandContainer name="Load_FP_from_file_send_fp_load">
                    <EntryList>
                        <FixedValueEntry binaryValue="6670206c6f6164" sizeInBits="56" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Store_current_FP_to_file_send_fp_store" shortDescription="Store current FP to file">
                <CommandContainer name="Store_current_FP_to_file_send_fp_store">
                    <EntryList>
                        <FixedValueEntry binaryValue="66702073746f7265" sizeInBits="64" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Set_timer_active_send_fp_active" shortDescription="Set timer active">
                <CommandContainer name="Set_timer_active_send_fp_active">
                    <EntryList>
                        <FixedValueEntry binaryValue="667020616374697665" sizeInBits="72" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Set_All_timers_active_send_fp_allactive" shortDescription="Set all timers active">
                <CommandContainer name="Set_All_timers_active_send_fp_allactive">
                    <EntryList>
                        <FixedValueEntry binaryValue="667020616c6c616374697665" sizeInBits="96" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Set_timer_dormant_send_fp_dormant" shortDescription="Set timer dormant">
                <CommandContainer name="Set_timer_dormant_send_fp_dormant">
                    <EntryList>
                        <FixedValueEntry binaryValue="667020646f726d616e74" sizeInBits="80" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Set_timer_repeat_send_fp_repeat" shortDescription="Set timer repeat">
                <CommandContainer name="Set_timer_repeat_send_fp_repeat">
                    <EntryList>
                        <FixedValueEntry binaryValue="667020726570656174" sizeInBits="72" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Set_execution_time_send_fp_time" shortDescription=" Set execution time">
                <CommandContainer name="Set_execution_time_send_fp_time">
                    <EntryList>
                        <FixedValueEntry binaryValue="66702074696d65" sizeInBits="56" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Get_status_information_send_fp_status" shortDescription="Get status information">
                <CommandContainer name="Get_status_information_send_fp_status">
                    <EntryList>
                        <FixedValueEntry binaryValue="667020737461747573" sizeInBits="72" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>









            <!--ADCS Commands-->
            <MetaCommand name="Start_ADCS_send_adcs_run_start" shortDescription="Start ADCS">
                <CommandContainer name="Start_ADCS_send_adcs_run_start">
                    <EntryList>
                        <FixedValueEntry binaryValue="616463732072756e207374617274" sizeInBits="112" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Stop_ADCS_send_adcs_run_stop" shortDescription="Stop ADCS">
                <CommandContainer name="Stop_ADCS_send_adcs_run_stop">
                    <EntryList>
                        <FixedValueEntry binaryValue="616463732072756e2073746f70" sizeInBits="104" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Get_ADCS_State_send_adcs_state_get" shortDescription="ADCS state get">
                <CommandContainer name="Get_ADCS_State_send_adcs_state_get">
                    <EntryList>
                        <FixedValueEntry binaryValue="6164637320737461746520676574" sizeInBits="112" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Set_ADCS_Frame_send_adcs_state_setframe" shortDescription="Set the Frame mode">
                <ArgumentList>
                    <Argument name="Frame_Number" argumentTypeRef="Frame_Number_Type"/>
                </ArgumentList>
                <CommandContainer name="Set_ADCS_Frame_send_adcs_state_setframe">
                    <EntryList>
                        <FixedValueEntry binaryValue="61646373207374617465207365746672616d65" sizeInBits="152" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8" />
                        <ArgumentRefEntry argumentRef="Frame_Number"/>
                    </EntryList>
                </CommandContainer>
            </MetaCommand>
            <MetaCommand name="Set_ADCS_ACS_send_adcs_state_setacs" shortDescription="Set the ACS mode">
                <ArgumentList>
                    <Argument name="ACS_Number" argumentTypeRef="ACS_Number_Type"/>
                </ArgumentList>
                <CommandContainer name="Set_ADCS_ACS_send_adcs_state_setacs">
                    <EntryList>
                        <FixedValueEntry binaryValue="6164637320737461746520736574616373" sizeInBits="136" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8" />
                        <ArgumentRefEntry argumentRef="ACS_Number"/>
                    </EntryList>
                </CommandContainer>
            </MetaCommand>

            
            
            
            
            <!--Ping Command-->
            <MetaCommand name="Ping" shortDescription="Ping devices">
                <ArgumentList>
                    <Argument argumentTypeRef="Ping1_Type" name="Ping1" shortDescription="Ping1" />
                    <Argument argumentTypeRef="Ping2_Type" name="Ping2" shortDescription="Ping2" />
                    <Argument argumentTypeRef="Ping3_Type" name="Ping3" shortDescription="Ping3" />
                </ArgumentList>
                <CommandContainer name="Ping">
                    <EntryList>
                        <FixedValueEntry binaryValue="70696e67" sizeInBits="32" />
                        <FixedValueEntry binaryValue="20" sizeInBits="8"/>
                        <ArgumentRefEntry argumentRef="Ping1" />
                        <ArgumentRefEntry argumentRef="Ping2" />
                        <ArgumentRefEntry argumentRef="Ping3" />
                    </EntryList>
                </CommandContainer>
            </MetaCommand>

        </MetaCommandSet>
    </CommandMetaData>
</SpaceSystem>
