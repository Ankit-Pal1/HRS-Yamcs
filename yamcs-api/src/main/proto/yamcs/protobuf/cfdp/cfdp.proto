syntax="proto2";
  
package yamcs.protobuf.cfdp;

option java_package = "org.yamcs.protobuf";
option java_outer_classname = "CfdpProto";
option java_multiple_files = true;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

import "yamcs/api/annotations.proto";
 
service CfdpApi {

  // List transfers
  rpc ListTransfers(ListTransfersRequest) returns (ListTransfersResponse) {
    option (yamcs.api.route) = {
      get: "/api/cfdp/{instance}/transfers"
    };
  }
  
  // Get a transfer
  rpc GetTransfer(GetTransferRequest) returns (TransferInfo) {
    option (yamcs.api.route) = {
      get: "/api/cfdp/{instance}/transfers/{id}"
    };
  }
  
  // Create a transfer
  rpc CreateTransfer(CreateTransferRequest) returns (TransferInfo) {
    option (yamcs.api.route) = {
      post: "/api/cfdp/{instance}/transfers"
      body: "*"
    };
  }
  
  // Pause a transfer
  rpc PauseTransfer(PauseTransferRequest) returns (google.protobuf.Empty) {
    option (yamcs.api.route) = {
      post: "/api/cfdp/{instance}/transfers/{id}:pause"
    };
  }

  // Cancel a transfer
  rpc CancelTransfer(CancelTransferRequest) returns (google.protobuf.Empty) {
    option (yamcs.api.route) = {
      post: "/api/cfdp/{instance}/transfers/{id}:cancel"
    };
  }
  
  // Resume a transfer
  rpc ResumeTransfer(ResumeTransferRequest) returns (google.protobuf.Empty) {
    option (yamcs.api.route) = {
      post: "/api/cfdp/{instance}/transfers/{id}:resume"
    };
  }
  
  // Receive transfer updates
  rpc SubscribeTransfers(SubscribeTransfersRequest) returns (stream TransferInfo) {
    option (yamcs.api.websocket) = {
      topic: "cfdp-transfers"
    };
  }
}

enum TransferDirection {
  UPLOAD = 1;
  DOWNLOAD = 2;
}

enum TransferState {
  RUNNING = 1;
  PAUSED = 2;
  FAILED = 3;
  COMPLETED = 4;
}

message TransactionId {
    optional uint32 sequenceNumber = 1;
    optional uint64 initiatorEntity = 2;
}

//message sent as reponse to the info and also when starting a new transfer
message TransferInfo {
  //unique identifier assigned by the CfdpService
  optional uint32 id = 1;
  
  optional google.protobuf.Timestamp startTime = 2;
  optional TransferState state = 3;

  optional string bucket = 4;
  optional string objectName = 5;

  optional string remotePath = 6;
  optional TransferDirection direction = 7;

  optional uint64 totalSize = 8;
  optional uint64 sizeTransferred = 9;
  
  //reliable = true -> class 2 transfer
  //reliable = false -> class 1 transfer
  optional bool reliable = 10;
  
  //in case the transcation is failed, this provides more information
  optional string failureReason = 11;

  // CFDP transaction id;
  // for the incoming transfers it is assigned by the remote peer so therefore might not be unique
  optional TransactionId transactionId = 12;
}

message CreateTransferRequest {
  message UploadOptions {
    optional bool overwrite = 1;
    optional bool createPath = 2;
    optional bool reliable = 3;
  }
  message DownloadOptions {
  }

  optional string instance = 1;
  optional TransferDirection direction = 2;
  optional string bucket = 3;
  optional string objectName = 4;
  optional string remotePath = 5;
  optional DownloadOptions downloadOptions = 6;
  optional UploadOptions uploadOptions = 7;
}

message PauseTransferRequest {
  optional string instance = 1;
  optional int64 id = 2;
}

message CancelTransferRequest {
  optional string instance = 1;
  optional int64 id = 2;
}

message ResumeTransferRequest {
  optional string instance = 1;
  optional int64 id = 2;
}

message ListTransfersRequest {
  optional string instance = 1;
}

message GetTransferRequest {
  optional string instance = 1;
  optional int64 id = 2;
}

message ListTransfersResponse {
  repeated TransferInfo transfers = 1;
}

message SubscribeTransfersRequest {
  optional string instance = 1;
}
