syntax="proto2";
  
package yamcs.protobuf.clients;

option java_package = "org.yamcs.protobuf";
option java_outer_classname = "ClientsProto";
option java_multiple_files = true;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

import "yamcs/api/annotations.proto";
 
// Methods for working with 'clients'.
//
// .. warning::
//     This API is gradually being phased out and subject to removal.
//     It dates from a time when client software was not knowledgeable about
//     Yamcs and where their state (instance, processor) had to be managed
//     server-side.
service ClientsApi {

  // List clients
  //
  // .. warning::
  //     It is recommended to avoid using this method. It dates from a time
  //     when clients were not knowledgeable about Yamcs and their state had
  //     to be managed server-side. Nowadays we are favouring stateless APIs
  //     and leave state management entirely to the client software.
  rpc ListClients(google.protobuf.Empty) returns (ListClientsResponse) {
    option (yamcs.api.route) = {
      get: "/api/clients"
    };
  }
  
  // Get a client
  //
  // .. warning::
  //     It is recommended to avoid using this method. It dates from a time
  //     when clients were not knowledgeable about Yamcs and their state had
  //     to be managed server-side. Nowadays we are favouring stateless APIs
  //     and leave state management entirely to the client software.
  rpc GetClient(GetClientRequest) returns (ClientInfo) {
    option (yamcs.api.route) = {
      get: "/api/clients/{id}"
    };
  }
  
  // Update a client
  //
  // .. warning::
  //     It is recommended to avoid using this method. It dates from a time
  //     when clients were not knowledgeable about Yamcs and their state had
  //     to be managed server-side. Nowadays we are favouring stateless APIs
  //     and leave state management entirely to the client software.
  rpc UpdateClient(EditClientRequest) returns (google.protobuf.Empty) {
    option (yamcs.api.route) = {
      patch: "/api/clients/{id}"
      body: "*"
    };
  }
}

message ListClientsResponse {
  repeated ClientInfo clients = 1;
}

message GetClientRequest {
  optional int32 id = 1;
}

message EditClientRequest {
  optional int32 id = 1;
  optional string instance = 2;
  optional string processor = 3;
}

message ClientInfo {
  reserved 8,9;
  enum ClientState {
    CONNECTED = 0;
    DISCONNECTED = 1;
  }
  optional int32 id = 2;
  optional string username = 3;
  optional string applicationName = 4;
  optional string address = 10;

  optional string instance = 1;  
  optional string processorName = 5;
  
  optional ClientState state = 6;
  optional google.protobuf.Timestamp loginTime = 11;
}
